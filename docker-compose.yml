services:
  db:
    restart: always
    image: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - file_upload/.env
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres -d db' ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    depends_on:
      - db

  web:
    build:
      context: ./
      dockerfile: Dockerfile
    command:
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - file_upload/.env
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/usr/src/app/static/
      - media_volume:/usr/src/app/media/

  celery_worker:
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    command: celery -A file_upload worker -l info
    env_file:
      - file_upload/.env
    depends_on:
      - web
      - redis
      - db

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: